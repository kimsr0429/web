<div class="row my-5">
    <div class="col">
        <!-- 검색폼 -->
        <div class="row justify-content-end mb-2">
            <form name="frm" class="col-6 col-md-4 col-lg-3">
                <div class="input-group">
                    <input name="query" class="form-control" value="자바">
                    <button class="btn btn-primary">검색</button>
                </div>
            </form>
        </div>
        <!-- 도서검색 결과 출력 -->
        <div id="div_books" class="row"></div>
        <!-- 페이지 이동 버튼 -->
        <div class="text-center">
            <button id="prev" class="btn btn-primary">이전</button>
            <span id="span_page" class="mx-3"></span>
            <button id="next" class="btn btn-primary">다음</button>
        </div>
    </div>
</div>
<!-- 도서검색 템플릿 -->
<script type="x-handlebars-template" id="templ_books">
    {{#each documents}}
        <div class="col-6 col-md-4 col-lg-2 mb-3">
            <div class="card">
                <div class="card-body">
                    <img src="{{check thumbnail}}" width="90%" index="{{@index}}">
                    <div class="ellipsis pt-3">{{title}}</div>
                </div>
                <div class="card-footer">
                    {{fmt_price price}}
                    <i class="cart bi bi-bag-plus-fill float-end" book="{{book @this}}"></i>
                </div>
            </div>
        </div>
        <%-include('./books/modal.ejs')%>
    {{/each}}
</script>

<script>
    Handlebars.registerHelper('check', function(thumbnail) {
        if(thumbnail) return thumbnail;
        else return 'http://via.placeholder.com/120x170';
    });

    Handlebars.registerHelper('fmt_price', function(price) {
        return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '원';
    });

    Handlebars.registerHelper("book", function(book) {
        return JSON.stringify(book); // object to string
    });
</script>

<script type="module"> // type="module" 시험에 나옴
    import { app } from "/javascripts/firebase.js"
    import { getDatabase, ref, get, set } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-database.js";
    const db = getDatabase(app); // app 시험에 나옴

    let query = $(frm.query).val();
    let page = 1;

    getBooks();

    // 장바구니 아이콘을 클릭한 경우
    $("#div_books").on("click", ".cart", async function() {
        if(!sessionStorage.getItem("uid") && !sessionStorage.getItem("email")) {
            alert("로그인이 필요한 서비스입니다.\n로그인 페이지로 이동합니다.")
            location.href = "/users/login";
        } else {
            // 장바구니에 있는지 체크
            const book = JSON.parse($(this).attr("book")); // JSON.parse($(this).attr("book")) 시험에 나올 수 있음
            const ref_cart = ref(db, `cart/${sessionStorage.getItem("uid")}/${book.isbn}`);
            const result = await get(ref_cart);
            
            if(result.val()) {
                alert("이미 장바구니에 있습니다.")
            } else {
                if(!confirm("장바구니에 추가하시겠습니까?")) return;
                set(ref_cart, book);
                alert("장바구니에 추가되었습니다.");
            }
        }
    });

    // 이미지를 클릭한 경우
    $("#div_books").on("click", "img", function() {
        let index = $(this).attr("index"); // this: #div_books의 img
        $("#modal" + index).modal("show");
    });

    $(frm).on('submit', function(e) { // name으로 선택할 때는 아무것도 안 붙이면 됨.(id: #, class: .)
        e.preventDefault();

        query = $(frm.query).val(); // frm의 query 선택
        page = 1;

        getBooks();
    });

    // 이전 버튼을 클릭한 경우
    $('#prev').on('click', function() {
        page--;
        getBooks();
    });
    
    // 다음 버튼을 클릭한 경우
    $('#next').on('click', function() {
        page++; // 100 페이지 넘어가면 page is more than max 에러 발생. 공식 문서에는 1~50으로 기재돼있으나, 100페이지 까지는 가능한 듯.
        getBooks();
    });

    function getBooks() {
        $.ajax({
            type: 'GET',
            url: 'https://dapi.kakao.com/v3/search/book?target=title',
            headers: {
                'Authorization': 'KakaoAK 1e68e001234e37ddd229e2613b196f6e'
            },
            data: {
                query: query,
                page: page,
                size: 6
            },
            success: function(data) {
                let templ = Handlebars.compile($('#templ_books').html());
                $('#div_books').html(templ(data));

                let last = Math.ceil(data.meta.pageable_count / 6);
                $('#span_page').html(page + '/' + last);

                (page == 1) ? $('#prev').attr('disabled', true) : $('#prev').attr('disabled', false);
                (data.meta.is_end) ? $('#next').attr('disabled', true) : $('#next').attr('disabled', false);
            }
        });
    }
</script>